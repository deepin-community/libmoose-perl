libmoose-perl (2.1004-1) unstable; urgency=low

  From upstream Changes:

  [API CHANGES]

  * Fixed the Num builtin type to reject NaN, Inf, numbers with whitespace,
    and other questionable strings. The MooseX::Types::LaxNum distro
    implements the old behavior. RT#70539 (Upasana Shukla)

 -- Alessandro Ghedini <ghedo@debian.org>  Mon, 05 Aug 2013 13:40:14 +0200

libmoose-perl (2.0401-1) unstable; urgency=low

  From upstream Changes:

  [DEPRECATIONS]

  * The optimize_as option for type constraints has been deprecated. Use the
    inline_as option to provide inlining code instead. (Dave Rolsky)

  [API CHANGES]

  * Methods to introspect a class's methods will now return methods defined in
    UNIVERSAL (isa, can, etc.). This also means that you can wrap these
    methods with method modifiers. RT #69839. Reported by Vyacheslav
    Matyukhin. (Dave Rolsky)

  * The ->parent and ->parents method for a union now return the nearest
    common ancestor of that union's component types. See Moose::Manual::Delta
    for more details. (Dave Rolsky)

  * The ->parents method used to return an arrayref for union types, and a
    list of one or more types for all other types. Now they all return
    lists. (Dave Rolsky)

  * The ->is_subtype_of and ->is_a_type_of methods have changed their behavior
    for union types. Previously, they returned true if any of their member
    types returned true for a given type. Now, all of the member types must
    return true. RT #67731. (Dave Rolsky)

  [OTHER]

  * The Class::MOP::load_class and Class::MOP::is_class_loaded subroutines are
    no longer documented, and will cause a deprecation warning in the
    future. Moose now uses Class::Load to provide this functionality, and you
    should as well. (Dave Rolsky)

 -- Alessandro Ghedini <al3xbio@gmail.com>  Thu, 24 Nov 2011 11:12:36 +0100

libmoose-perl (2.0000-1) unstable; urgency=low

  From upstream Changes:

  [OTHER]

  * The entire Class::MOP distribution has been merged with Moose. In the
    future, the Class::MOP code itself will be merged into Moose, and
    eventually the Class::MOP namespace will disappear entirely. For the
    current release, we have simply changed how Class::MOP is
    distributed. (Dave Rolsky).

  [API CHANGES]

  * The RegexpRef type constraint now accepts regular expressions blessed
    into other classes, such as those found in pluggable regexp engines.
    Additionally the 'Object' constraint no longer rejects objects which
    implementation is a regular expression. (David Leadbeater)

  * Roles now have their own default attribute metaclass to use during
    application to a class, rather than just using the class's
    attribute_metaclass. This is also overridable via ::MetaRole, with the
    applied_attribute key in the role_metaroles hashref (doy).

  * The internal code used to generate inlined methods (accessor,
    constructor, etc.) has been massively rewritten. MooseX modules that do
    inlining will almost certainly need to be updated as well.

 -- Alessandro Ghedini <al3xbio@gmail.com>  Wed, 13 Apr 2011 11:19:27 +0200

libmoose-perl (1.15-1) unstable; urgency=low

  From upstream Changes:

  [API CHANGES]

  * Major changes to Native Traits, most of which make them act more like
    "normal" attributes. This should be mostly compatible with existing code,
    but see Moose::Manual::Delta for details.

  * A few native traits (String, Counter, Bool) provide default values of "is"
    and "default" when you created an attribute. Allowing them to provide
    these values is now deprecated. Supply the value yourself when creating
    the attribute.

  * New option 'trait_aliases' for Moose::Exporter, which will allow you to
    generate non-global aliases for your traits (and allow your users to
    rename the aliases, etc). (doy)

  * 'use Moose' and 'use Moose::Role' now accept a '-meta_name' option, to
    determine which name to install the 'meta' name under. Passing 'undef'
    to this option will suppress generation of the meta method entirely. (doy)

  * Moose now warns if it overwrites an existing method named "meta" in your
    class when you "use Moose". (doy)

 -- gregor herrmann <gregoa@debian.org>  Thu, 07 Oct 2010 18:39:26 +0200

libmoose-perl (1.14-1) unstable; urgency=low

  In this version, some major API changes may affect behaviour of
  your software:

  * The deprecation warnings for alias and excludes are back, use -alias
    and -excludes instead. (Dave Rolsky)

 -- Jonathan Yu <jawnsy@cpan.org>  Sun, 03 Oct 2010 18:18:03 -0400

libmoose-perl (1.05-1) unstable; urgency=low

  In this version, some major API changes may affect behaviour of
  your software:

  * Packages and modules no longer have methods; this functionality
    was moved back up into Moose::Meta::Class and Moose::Meta::Role
    individually (via the Class::MOP::Mixin::HasMethods mixin)
  * BUILDALL is now called by Moose::Meta::Class::new_object, rather
    than by Moose::Object::new

 -- Jonathan Yu <jawnsy@cpan.org>  Thu, 20 May 2010 20:28:55 -0400

libmoose-perl (0.59-1) unstable; urgency=low

  From upstream CHANGELOG entry:
    !! This release has an incompatible change regarding !!
    !! how roles add methods to a class !!

 -- Krzysztof Krzy≈ºaniak (eloy) <eloy@debian.org>  Tue, 28 Oct 2008 12:10:23 +0100
